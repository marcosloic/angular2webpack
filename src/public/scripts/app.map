{"version":3,"sources":["webpack:///./src/bootstrap.ts","webpack:///./src/app/app.ts","webpack:///./src/app/providers/title.ts","webpack:///./src/app/directives/x-large.ts","webpack:///./src/app/home/home.ts","webpack:///./src/app/home/home.css","webpack:///./src/app/home/home.html"],"names":["main","App","App.constructor","Title","Title.constructor","XLarge","XLarge.constructor","Home","Home.constructor","Home.ngOnInit"],"mappings":";;;;;AAGA,qCAAwB,CAA2B,CAAC;AACpD,oCAA+B,GAAiB,CAAC;AACjD,kCAA6B,GAAe,CAAC;AAE7C,wCAAsC,GAA8B,CAAC;AAQrE,iCAAkB,GAAW,CAAC;AAO9B;KACEA,MAAMA,CAACA,mBAASA,CAACA,SAAGA,EAAEA;SAEpBA,qBAAcA;SACdA,yBAAgBA;SAChBA,oCAAuBA;MACxBA,CAACA;UACDA,KAAKA,CAACA,aAAGA,IAAIA,cAAOA,CAACA,KAAKA,CAACA,GAAGA,CAACA,EAAlBA,CAAkBA,CAACA,CAACA;AACpCA,EAACA;AAED,SAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;;;;;;;;;;;;;;;;;AC7BpD,kCAAwB,EAAe,CAAC;AACxC,oCAAqD,GAAiB,CAAC;AAEvE,oCAA6B,GAAiB,CAAC;AAE/C,mCAAoB,GAAmB,CAAC;AACxC,qCAAqB,GAAsB,CAAC;AAC5C,kCAAmB,GAAa,CAAC;AAMjC;KA6CEC,aAAmBA,KAAYA;SAAZC,UAAKA,GAALA,KAAKA,CAAOA;SAD/BA,QAAGA,GAAWA,kCAAkCA,CAACA;KACfA,CAACA;KA7CrCD;SAACA,gBAASA,CAACA;aAITA,QAAQA,EAAEA,KAAKA;aAEfA,SAASA,EAAOA,uBAAcA,SAAEA,aAAKA,EAACA;aAGtCA,UAAUA,EAAOA,0BAAiBA,SAAEA,gBAAMA,EAAEA;aAE5CA,KAAKA,EAAEA,EAAEA;aAETA,MAAMA,EAAEA,CAACA,uHAQRA,CAACA;aAEFA,QAAQA,EAAEA,wVAeTA;UACFA,CAACA;SACDA,oBAAWA,CAACA;aACXA,EAAEA,IAAIA,EAAEA,GAAGA,EAAEA,SAASA,EAAEA,WAAIA,EAAEA,IAAIA,EAAEA,MAAMA,EAAEA;UAC7CA,CAACA;;aAIDA;KAADA,UAACA;AAADA,EAACA,IAAA;AAHY,YAAG,MAGf;;;;;;;;;;;;;;;;;AC9DD,kCAAyB,EAAe,CAAC;AAEzC;KAGEE;SACEC,IAAIA,CAACA,KAAKA,GAAGA,WAAWA,CAACA;KAC3BA,CAACA;KALHD;SAACA,iBAAUA,EAAEA;;eAMZA;KAADA,YAACA;AAADA,EAACA,IAAA;AALY,cAAK,QAKjB;;;;;;;;;;;;;;;;;ACRD,kCAAyD,EAAe,CAAC;AAKzE;KAIEE,gBAAYA,OAAmBA,EAAEA,QAAkBA;SAMjDC,QAAQA,CAACA,eAAeA,CAACA,OAAOA,EAAEA,UAAUA,EAAEA,SAASA,CAACA,CAACA;KAC3DA,CAACA;KAXHD;SAACA,gBAASA,CAACA;aACTA,QAAQA,EAAEA,WAAWA;UACtBA,CAACA;;gBAUDA;KAADA,aAACA;AAADA,EAACA,IAAA;AATY,eAAM,SASlB;;;;;;;;;;;;;;;;;ACjBD,kCAAwB,EAAe,CAAC;AACxC,oCAA8B,GAAiB,CAAC;AAChD,kCAAmB,GAAe,CAAC;AAEnC,mCAAoB,GAAoB,CAAC;AAEzC;KAUEE,cAAmBA,KAAYA,EAASA,IAAUA;SAA/BC,UAAKA,GAALA,KAAKA,CAAOA;SAASA,SAAIA,GAAJA,IAAIA,CAAMA;KAClDA,CAACA;KAEDD,uBAAQA,GAARA;SACEE,OAAOA,CAACA,GAAGA,CAACA,YAAYA,CAACA,CAACA;KAC5BA,CAACA;KAfHF;SAACA,gBAASA,CAACA;aACTA,QAAQA,EAAEA,MAAMA;aAChBA,UAAUA,EAAOA,wBAAeA,QAAEA;aAClCA,SAASA,EAAEA,CAAEA,aAAKA,CAAEA;aACpBA,KAAKA,EAAEA,EAAGA;aACVA,MAAMA,EAAEA,CAAE,mBAAOA,CAAC,GAAYA,CAACA,CAAEA;aACjCA,QAAQA,EAAE,mBAAOA,CAAC,GAAaA,CAACA;UACjCA,CAACA;;cAUDA;KAADA,WAACA;AAADA,EAACA,IAAA;AATY,aAAI,OAShB;;;;;;;;ACvBD,oB;;;;;;;ACAA,6VAA4V,gBAAgB,iB","file":"app.js","sourcesContent":["/*\n * Providers provided by Angular\n */\nimport {bootstrap} from 'angular2/platform/browser';\nimport {ROUTER_PROVIDERS} from 'angular2/router';\nimport {HTTP_PROVIDERS} from 'angular2/http';\n// include for development builds\nimport {ELEMENT_PROBE_PROVIDERS} from 'angular2/platform/common_dom';\n// include for production builds\n// import {enableProdMode} from 'angular2/core';\n\n/*\n * App Component\n * our top level component that holds all of our components\n */\nimport {App} from './app/app';\n\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\n// enableProdMode() // include for production builds\nfunction main() {\n  return bootstrap(App, [\n    // These are dependencies of our App\n    HTTP_PROVIDERS,\n    ROUTER_PROVIDERS,\n    ELEMENT_PROBE_PROVIDERS // remove in production\n  ])\n  .catch(err => console.error(err));\n}\n\ndocument.addEventListener('DOMContentLoaded', main);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/bootstrap.ts\n **/","/*\n * Angular 2 decorators and services\n */\nimport {Component} from 'angular2/core';\nimport {RouteConfig, Router, ROUTER_DIRECTIVES} from 'angular2/router';\nimport {Http} from 'angular2/http';\nimport {FORM_PROVIDERS} from 'angular2/common';\n\nimport {Title} from './providers/title';\nimport {XLarge} from './directives/x-large';\nimport {Home} from './home/home';\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'app'\n  selector: 'app', // <app></app>\n  // We need to tell Angular's Dependency Injection which providers are in our app.\n  providers: [ ...FORM_PROVIDERS, Title],\n  // We need to tell Angular's compiler which directives are in our template.\n  // Doing so will allow Angular to attach our behavior to an element\n  directives: [ ...ROUTER_DIRECTIVES, XLarge ],\n  // We need to tell Angular's compiler which custom pipes are in our template.\n  pipes: [],\n  // Our list of styles in our component. We may add more to compose many styles together\n  styles: [`\n    .title {\n      font-family: Arial, Helvetica, sans-serif;\n    }\n    main {\n      padding: 1em;\n    }\n\n  `],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  template: `\n    <header>\n      <h1 class=\"title\">Hello {{ title.value }}</h1>\n      <nav>\n        <a [routerLink]=\" ['Home'] \">Home</a>\n      </nav>\n    </header>\n\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n\n    <footer x-large>\n      WebPack Angular 2 Starter by <a [href]=\"url\">@AngularClass</a>\n    </footer>\n  `\n})\n@RouteConfig([\n  { path: '/', component: Home, name: 'Home' }\n])\nexport class App {\n  url: string = 'https://twitter.com/AngularClass';\n  constructor(public title: Title) {}\n}\n\n/*\n * Please review the https://github.com/AngularClass/angular2-examples/ repo for\n * more angular app examples that you may copy/paste\n * (The examples may not be updated as quickly. Please open an issue on github for us to update it)\n * For help or questions please contact us at @AngularClass on twitter\n * or our chat on Slack at https://AngularClass.com/slack-join\n * or via chat on Gitter at https://gitter.im/AngularClass/angular2-webpack-starter\n */\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/app.ts\n **/","import {Injectable} from 'angular2/core';\n\n@Injectable()\nexport class Title {\n  value: string;\n  constructor() {\n    this.value = 'Angular 2';\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/providers/title.ts\n **/","import {Directive, Component, ElementRef, Renderer} from 'angular2/core';\n/*\n * Directive\n * XLarge is a simple directive to show how one is made\n */\n@Directive({\n  selector: '[x-large]' // using [ ] means selecting attributes\n})\nexport class XLarge {\n  constructor(element: ElementRef, renderer: Renderer) {\n    // simple DOM manipulation to set font size to x-large\n    // `nativeElement` is the direct reference to the DOM element\n    // element.nativeElement.style.fontSize = 'x-large';\n\n    // for server/webworker support use the renderer\n    renderer.setElementStyle(element, 'fontSize', 'x-large');\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/directives/x-large.ts\n **/","import {Component} from 'angular2/core';\nimport {FORM_DIRECTIVES} from 'angular2/common';\nimport {Http} from 'angular2/http';\n\nimport {Title} from '../providers/title';\n\n@Component({\n  selector: 'home',\n  directives: [ ...FORM_DIRECTIVES ],\n  providers: [ Title ],\n  pipes: [ ],\n  styles: [ require('./home.css') ],\n  template: require('./home.html')\n})\nexport class Home {\n  // TypeScript public modifiers\n  constructor(public title: Title, public http: Http) {\n  }\n\n  ngOnInit() {\n    console.log('hello Home');\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/home/home.ts\n **/","module.exports = \"\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.css\n ** module id = 266\n ** module chunks = 0\n **/","module.exports = \"<div>\\n  Your Content Here\\n  <input type=\\\"text\\\" [value]=\\\"title.value\\\" (input)=\\\"title.value = $event.target.value\\\" autofocus>\\n  <!--\\n    Rather than wiring up two-way data-binding ourselves\\n    we can use Angular's [(ngModel)] syntax\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"title.value\\\">\\n  -->\\n\\n  <pre>this.title = {{ title | json }}</pre>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.html\n ** module id = 267\n ** module chunks = 0\n **/"],"sourceRoot":""}